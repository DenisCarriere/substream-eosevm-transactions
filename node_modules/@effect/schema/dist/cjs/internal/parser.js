"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.union = exports.unexpected = exports.typeLiteral = exports.type = exports.tuple = exports.transform = exports.refinement = exports.missing = exports.member = exports.mapError = exports.map = exports.key = exports.index = exports.forbidden = exports.flatMap = exports.eitherOrUndefined = exports.declaration = void 0;
var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
var Either = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Either"));
var _Function = /*#__PURE__*/require("effect/Function");
var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function (e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != typeof e && "function" != typeof e) return {
    default: e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n.default = e, t && t.set(e, n), n;
}
/**
 * @since 1.0.0
 */

/** @internal */
const flatMap = exports.flatMap = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => {
  const s = self;
  if (s["_tag"] === "Left") {
    return s;
  }
  if (s["_tag"] === "Right") {
    return f(s.right);
  }
  return Effect.flatMap(self, f);
});
/** @internal */
const map = exports.map = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => {
  const s = self;
  if (s["_tag"] === "Left") {
    return s;
  }
  if (s["_tag"] === "Right") {
    return Either.right(f(s.right));
  }
  return Effect.map(self, f);
});
/** @internal */
const mapError = exports.mapError = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => {
  const s = self;
  if (s["_tag"] === "Left") {
    return Either.left(f(s.left));
  }
  if (s["_tag"] === "Right") {
    return s;
  }
  return Effect.mapError(self, f);
});
/** @internal */
const eitherOrUndefined = self => {
  const s = self;
  if (s["_tag"] === "Left" || s["_tag"] === "Right") {
    return s;
  }
};
/** @internal */
exports.eitherOrUndefined = eitherOrUndefined;
const declaration = (ast, actual, error) => ({
  _tag: "Declaration",
  ast,
  actual,
  error
});
/** @internal */
exports.declaration = declaration;
const refinement = (ast, actual, kind, error) => ({
  _tag: "Refinement",
  ast,
  actual,
  kind,
  error
});
/** @internal */
exports.refinement = refinement;
const tuple = (ast, actual, errors) => ({
  _tag: "Tuple",
  ast,
  actual,
  errors
});
/** @internal */
exports.tuple = tuple;
const index = (index, error) => ({
  _tag: "Index",
  index,
  error
});
/** @internal */
exports.index = index;
const typeLiteral = (ast, actual, errors) => ({
  _tag: "TypeLiteral",
  ast,
  actual,
  errors
});
/** @internal */
exports.typeLiteral = typeLiteral;
const key = (key, error) => ({
  _tag: "Key",
  key,
  error
});
/** @internal */
exports.key = key;
const unexpected = ast => ({
  _tag: "Unexpected",
  ast
});
/** @internal */
exports.unexpected = unexpected;
const transform = (ast, actual, kind, error) => ({
  _tag: "Transform",
  ast,
  actual,
  kind,
  error
});
/** @internal */
exports.transform = transform;
const type = (ast, actual, message) => ({
  _tag: "Type",
  ast,
  actual,
  message: Option.fromNullable(message)
});
/** @internal */
exports.type = type;
const forbidden = (ast, actual, message) => ({
  _tag: "Forbidden",
  ast,
  actual,
  message: Option.fromNullable(message)
});
/** @internal */
exports.forbidden = forbidden;
const missing = exports.missing = {
  _tag: "Missing"
};
/** @internal */
const member = (ast, error) => ({
  _tag: "Member",
  ast,
  error
});
/** @internal */
exports.member = member;
const union = (ast, actual, errors) => ({
  _tag: "Union",
  ast,
  actual,
  errors
});
exports.union = union;
//# sourceMappingURL=parser.js.map