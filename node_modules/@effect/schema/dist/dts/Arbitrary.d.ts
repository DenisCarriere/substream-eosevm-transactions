/**
 * @since 1.0.0
 */
import * as ReadonlyArray from "effect/ReadonlyArray";
import type * as FastCheck from "fast-check";
import type * as Schema from "./Schema.js";
/**
 * @category model
 * @since 1.0.0
 */
export interface Arbitrary<A> {
    (fc: typeof FastCheck): FastCheck.Arbitrary<A>;
}
/**
 * @category hooks
 * @since 1.0.0
 */
export declare const ArbitraryHookId: unique symbol;
/**
 * @category hooks
 * @since 1.0.0
 */
export type ArbitraryHookId = typeof ArbitraryHookId;
/**
 * @category annotations
 * @since 1.0.0
 */
export declare const arbitrary: <A>(handler: (...args: ReadonlyArray<Arbitrary<any>>) => Arbitrary<A>) => <I, R>(self: Schema.Schema<A, I, R>) => Schema.Schema<A, I, R>;
/**
 * Returns a fast-check Arbitrary for the `A` type of the provided schema.
 *
 * @category arbitrary
 * @since 1.0.0
 */
export declare const make: <A, I, R>(schema: Schema.Schema<A, I, R>) => Arbitrary<A>;
//# sourceMappingURL=Arbitrary.d.ts.map